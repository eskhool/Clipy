name: Swift

on: [push]

jobs:
  build:
    environment: Sparkle Updates
    runs-on: macOS-latest
    steps:
    - uses: actions/checkout@v2
    - name: Show Xcode Version
      run: xcode-select -v
    - uses: actions/cache@v2
      with:
        path: |
          .build
          SourcePackages
        key: ${{ runner.os }}-spm-${{ hashFiles('**/Package.resolved') }}
        restore-keys: |
          ${{ runner.os }}-spm-
    - name: Download dependencies
      run: xcodebuild -resolvePackageDependencies -workspace Clipy.xcworkspace -scheme Clipy -configuration Release -clonedSourcePackagesDirPath SourcePackages
    - name: Use release tag as version
      if: startsWith(github.ref, 'refs/tags')
      run: bash .travis/release-a-version.sh
    - name: Setup certificates
      uses: apple-actions/import-codesign-certs@v1
      with:
        p12-file-base64: ${{ secrets.CERTIFICATES_P12 }}
        p12-password: ${{ secrets.CERTIFICATES_P12_PASSWORD }}
    - name: Build
      run: bash .travis/build.sh
      env:
        CS_ID: "Apple Development"
        CS_TEAM: "V299WZCD66"
    - name: Prepare Delta
      run: bash .travis/prepare_delta.sh
    - name: Sparkle
      env: 
        SPARKLE_ED25519_KEY: ${{ secrets.SPARKLE_ED25519_KEY }}
      run: bash .travis/sparkle_keys.sh
    - name: Show appcast.xml
      run: cat appcast.xml
    - name: Create Release
      if: startsWith(github.ref, 'refs/tags')
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: false
        prerelease: false
    - name: Upload Release Assets
      uses: alexellis/upload-assets@0.2.3
      if: startsWith(github.ref, 'refs/tags')
      env:
        GITHUB_TOKEN: ${{ github.token }}
      with:
        asset_paths: '["Clipy.app.zip", "appcast.xml", ".tmp/*.delta"]'
  test: 
    runs-on: macOS-latest
    steps:
    - uses: actions/checkout@v2
    - name: Show Xcode Version
      run: xcode-select -v
    - uses: actions/cache@v2
      with:
        path: |
          .build
          SourcePackages
        key: ${{ runner.os }}-spm-${{ hashFiles('**/Package.resolved') }}
        restore-keys: |
          ${{ runner.os }}-spm-
    - name: Download dependencies
      run: xcodebuild -resolvePackageDependencies -workspace Clipy.xcworkspace -scheme Clipy -configuration Release -clonedSourcePackagesDirPath SourcePackages
    - name: Run tests
      run: bash .travis/test.sh
